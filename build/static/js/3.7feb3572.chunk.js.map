{"version":3,"sources":["components/shared/FollowSuggestions/FollowSuggestionsItem.js","components/shared/FollowSuggestions/FollowSuggestions.js","components/feed/FeedPostCard.js"],"names":["FollowSuggestionsItem","username","name","user_id","profile_image","className","to","src","alt","FollowButton","FollowSuggestions","useUserContext","followerIds","currentUserData","useQuery","SUGGEST_USERS","variables","limit","createdAt","created_at","data","loading","infinite","speed","slidesToShow","slidesToScroll","initialSlide","responsive","breakpoint","settings","users","map","user","id","FeedPostCard","likes","likes_aggregate","caption","saved_posts","comments","comments_aggregate","media","index","navigate","useNavigate","userId","currentUserId","useState","content","setContent","showcaption","setShowCaption","showDialog","setShowDialog","likesCount","aggregate","count","CommentsCount","showFollowSuggestions","useMutation","ADD_COMMENT","postId","refetchQueries","GET_FEED","addCommnet","navigateToUserProfile","UserHeaderCard","onClick","LikeButton","authorId","htmlFor","SaveButton","savedPosts","comment","dateFormatToNow","slice","style","fontSize","datePostFormat","onSubmit","e","preventDefault","length","value","onChange","target","resize","placeholder","type","OptionsDialog","isAlreadyliked","some","like","setLike","LIKE_POST","profileId","likePost","UNLIKE_POST","unlikePost","isAlreadySaved","save","setSave","SAVE_POST","savePost","UNSAVE_POST","unsavePost","filled"],"mappings":"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","file":"static/js/3.7feb3572.chunk.js","sourcesContent":["import { Link } from \"react-router-dom\";\r\nimport FollowButton from \"../FollowButton\";\r\n\r\nconst FollowSuggestionsItem = ({ username, name, user_id, profile_image }) => {\r\n  return (\r\n    <div className=\"flex flex-col items-center w-full py-6 mx-auto text-center bg-white border border-gray-200 rounded shadow \">\r\n      <Link to={`/${username}`}>\r\n        <div className=\"w-12 h-12 mb-1 rounded-full\">\r\n          <img\r\n            src={profile_image}\r\n            alt={`${username}'s profile'`}\r\n            className=\"object-cover w-full h-full overflow-hidden rounded-full\"\r\n          />\r\n        </div>\r\n      </Link>\r\n      <Link to={`/${username}`}>\r\n        <p className=\"mb-1 text-base font-semibold text-gray-primary\">\r\n          {username}\r\n        </p>\r\n        <p className=\"mb-4 text-sm text-gray-light\"> {name}</p>\r\n      </Link>\r\n      <FollowButton\r\n        username={username}\r\n        name={name}\r\n        profile_image={profile_image}\r\n        user_id={user_id}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FollowSuggestionsItem;\r\n","import FollowSuggestionsItem from \"./FollowSuggestionsItem\";\n\nimport Slider from \"react-slick\";\nimport \"slick-carousel/slick/slick.css\";\nimport \"slick-carousel/slick/slick-theme.css\";\nimport { useQuery } from \"@apollo/client\";\nimport { SUGGEST_USERS } from \"graphql/queries\";\nimport { useUserContext } from \"auth/userContext\";\nimport { LoadingLargeIcon } from \"assets/icons\";\n\nconst FollowSuggestions = () => {\n  const { followerIds, currentUserData } = useUserContext();\n  const { data, loading } = useQuery(SUGGEST_USERS, {\n    variables: {\n      limit: 10,\n      followerIds,\n      createdAt: currentUserData?.created_at\n        ? currentUserData?.created_at\n        : null,\n    },\n  });\n  const settings = {\n    infinite: true,\n    speed: 1000,\n    slidesToShow: 3,\n    slidesToScroll: 3,\n    initialSlide: 0,\n    responsive: [\n      {\n        breakpoint: 800,\n        settings: {\n          slidesToShow: 2,\n          slidesToScroll: 2,\n          initialSlide: 2,\n        },\n      },\n      {\n        breakpoint: 480,\n        settings: {\n          slidesToShow: 1,\n          slidesToScroll: 1,\n          initialSlide: 1,\n        },\n      },\n    ],\n  };\n\n  return (\n    <div className=\"mb-8 \">\n      <h2 className=\"text-base font-semibold leading-4 text-gray-600\">\n        Suggestions For You\n      </h2>\n      <div className=\"mt-4\">\n        {loading ? (\n          <LoadingLargeIcon />\n        ) : (\n          <Slider {...settings}>\n            {data?.users.map((user) => (\n              <FollowSuggestionsItem key={user.id} {...user} />\n            ))}\n          </Slider>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default FollowSuggestions;\n","import { useState } from \"react\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\n\r\nimport UserHeaderCard from \"components/shared/UserHeaderCard\";\r\nimport FollowSuggestions from \"components/shared/FollowSuggestions/FollowSuggestions\";\r\n\r\nimport { useMutation } from \"@apollo/client\";\r\n\r\nimport {\r\n  ShareIcon,\r\n  LikeIcon,\r\n  LikeActiveIcon,\r\n  SaveIcon,\r\n  MoreIcon,\r\n  CommentIcon,\r\n  SaveActiveIcon,\r\n} from \"../../assets/icons\";\r\nimport OptionsDialog from \"components/shared/OptionsDialog\";\r\nimport { dateFormatToNow, datePostFormat } from \"utils/dateFormat\";\r\nimport {\r\n  ADD_COMMENT,\r\n  LIKE_POST,\r\n  SAVE_POST,\r\n  UNLIKE_POST,\r\n  UNSAVE_POST,\r\n} from \"graphql/mutations\";\r\nimport { useUserContext } from \"auth/userContext\";\r\nimport { GET_FEED } from \"graphql/queries\";\r\n\r\nconst FeedPostCard = ({\r\n  id,\r\n  likes,\r\n  likes_aggregate,\r\n  caption,\r\n  user,\r\n  saved_posts,\r\n  comments,\r\n  comments_aggregate,\r\n  created_at,\r\n  media,\r\n  index,\r\n}) => {\r\n  const navigate = useNavigate();\r\n  const { currentUserId: userId } = useUserContext();\r\n  const [content, setContent] = useState(\"\");\r\n  const [showcaption, setShowCaption] = useState(false);\r\n  const [showDialog, setShowDialog] = useState(false);\r\n  const likesCount = likes_aggregate.aggregate.count;\r\n  const CommentsCount = comments_aggregate.aggregate.count;\r\n  const { username } = user;\r\n  const showFollowSuggestions = index === 1;\r\n  const [addCommnet] = useMutation(ADD_COMMENT, {\r\n    variables: { userId, postId: id, content },\r\n    refetchQueries: [GET_FEED],\r\n  });\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    setContent(\"\");\r\n    if (content.length > 0) {\r\n      addCommnet();\r\n    }\r\n  };\r\n\r\n  function navigateToUserProfile() {\r\n    navigate(`/${user.username}`);\r\n  }\r\n  return (\r\n    <>\r\n      <div className=\"mb-8 overflow-hidden bg-white border rounded shadow-sm text-gray-primary\">\r\n        <div className=\"flex items-center justify-between w-full p-3\">\r\n          <UserHeaderCard user={user} />\r\n          <span onClick={() => setShowDialog(true)} className=\"cursor-pointer\">\r\n            <MoreIcon />\r\n          </span>\r\n        </div>\r\n        <div>\r\n          <img\r\n            className=\"object-cover w-full h-full\"\r\n            src={media}\r\n            alt=\"postpic\"\r\n          />\r\n        </div>\r\n        <div className=\"flex items-center justify-between px-3 py-2\">\r\n          <div className=\"flex items-center flex-1 gap-3\">\r\n            <LikeButton likes={likes} postId={id} authorId={user.user_id} />\r\n            <label htmlFor=\"comment\">\r\n              <CommentIcon />\r\n            </label>\r\n            <ShareIcon />\r\n          </div>\r\n          <SaveButton postId={id} savedPosts={saved_posts} />\r\n        </div>\r\n        <div className=\"px-3 pb-2\">\r\n          <div>\r\n            <span className=\"text-sm font-medium\">\r\n              {likesCount === 1 ? `1 like` : `${likesCount} likes`}\r\n            </span>\r\n          </div>\r\n          <div className=\"pt-1\">\r\n            <div className=\"mb-2 text-sm \">\r\n              <div className={`${showcaption ? \"\" : \"line-clamp-1\"}`}>\r\n                <Link to={`/${username}`}>\r\n                  <h3 className=\"inline mr-1 font-medium\">{username}</h3>\r\n                </Link>\r\n                <p className=\"inline text-base\">{caption}</p>\r\n              </div>\r\n\r\n              <span\r\n                onClick={() => setShowCaption(!showcaption)}\r\n                className=\"cursor-pointer text-gray-light\"\r\n              >\r\n                {showcaption ? \"less\" : \"more\"}\r\n              </span>\r\n            </div>\r\n          </div>\r\n          {CommentsCount > 2 && (\r\n            <Link to={`/p/${id}`}>\r\n              <div className=\"mb-2 text-sm font-medium cursor-pointer text-gray-light\">\r\n                View all {CommentsCount} comments\r\n              </div>\r\n            </Link>\r\n          )}\r\n\r\n          <div className=\"mb-2\">\r\n            <div className=\"flex flex-col gap-2 \">\r\n              {comments\r\n                ?.map((comment) => {\r\n                  const { content, created_at, user } = comment;\r\n\r\n                  return (\r\n                    <div key={comment.id} className=\"flex justify-between\">\r\n                      <div className=\"flex gap-2 \">\r\n                        <h3 className=\"inline text-sm font-medium\">\r\n                          <span\r\n                            className=\"cursor-pointer \"\r\n                            onClick={navigateToUserProfile}\r\n                          >\r\n                            {user.username}\r\n                          </span>\r\n                          <p className=\"inline ml-1 text-base font-normal break-all\">\r\n                            {content}\r\n                          </p>\r\n                        </h3>\r\n                      </div>\r\n                      <div className=\"mt-1 text-xs font-normal text-gray-light\">\r\n                        {dateFormatToNow(created_at)}\r\n                      </div>\r\n                    </div>\r\n                  );\r\n                })\r\n                .slice(0, 2)}\r\n            </div>\r\n          </div>\r\n\r\n          <div style={{ fontSize: 10 }} className=\"mb-2 text-gray-light \">\r\n            {datePostFormat(created_at)}\r\n          </div>\r\n        </div>\r\n        <form onSubmit={handleSubmit}>\r\n          <div className=\"flex border-t\">\r\n            <textarea\r\n              id=\"comment\"\r\n              value={content}\r\n              onChange={(e) => setContent(e.target.value)}\r\n              style={{ resize: \"none\" }}\r\n              placeholder=\"Add a comment...\"\r\n              className=\"flex-1 h-10 px-3 py-2 focus:outline-none\"\r\n              type=\"text\"\r\n            />\r\n            <button\r\n              type=\"submit\"\r\n              className=\"px-3 py-2 font-semibold transition-all duration-300 opacity-50 text-blue-medium hover:opacity-100\"\r\n            >\r\n              Post\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n      {showFollowSuggestions && <FollowSuggestions />}\r\n      {showDialog && (\r\n        <OptionsDialog postId={id} setShowDialog={setShowDialog} />\r\n      )}\r\n    </>\r\n  );\r\n};\r\nexport default FeedPostCard;\r\n\r\nfunction LikeButton({ postId, authorId, likes }) {\r\n  const { currentUserId: userId } = useUserContext();\r\n  const isAlreadyliked = likes.some(({ user_id }) => user_id === userId);\r\n  const [like, setLike] = useState(isAlreadyliked);\r\n\r\n  const [likePost] = useMutation(LIKE_POST, {\r\n    variables: {\r\n      postId,\r\n      userId,\r\n      profileId: authorId,\r\n    },\r\n    refetchQueries: [GET_FEED],\r\n  });\r\n  const [unlikePost] = useMutation(UNLIKE_POST, {\r\n    variables: {\r\n      postId,\r\n      userId,\r\n      profileId: authorId,\r\n    },\r\n    refetchQueries: [GET_FEED],\r\n  });\r\n  const handleLike = () => {\r\n    likePost();\r\n    setLike(true);\r\n  };\r\n  const handleUnLike = () => {\r\n    unlikePost();\r\n    setLike(false);\r\n  };\r\n  return (\r\n    <button onClick={like ? handleUnLike : handleLike}>\r\n      {like ? <LikeActiveIcon /> : <LikeIcon />}\r\n    </button>\r\n  );\r\n}\r\nfunction SaveButton({ postId, savedPosts }) {\r\n  const { currentUserId: userId } = useUserContext();\r\n  const isAlreadySaved = savedPosts.some(({ user_id }) => user_id === userId);\r\n  const [save, setSave] = useState(isAlreadySaved);\r\n\r\n  const [savePost] = useMutation(SAVE_POST, {\r\n    variables: {\r\n      postId,\r\n      userId,\r\n    },\r\n    refetchQueries: [GET_FEED],\r\n  });\r\n  const [unsavePost] = useMutation(UNSAVE_POST, {\r\n    variables: {\r\n      postId,\r\n      userId,\r\n    },\r\n    refetchQueries: [GET_FEED],\r\n  });\r\n  const handleSave = () => {\r\n    savePost();\r\n    setSave(true);\r\n  };\r\n  const handleUnSave = () => {\r\n    unsavePost();\r\n    setSave(false);\r\n  };\r\n  return (\r\n    <button onClick={save ? handleUnSave : handleSave}>\r\n      {save ? <SaveActiveIcon /> : <SaveIcon filled />}\r\n    </button>\r\n  );\r\n}\r\n"],"sourceRoot":""}